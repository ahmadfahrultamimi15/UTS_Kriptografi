# -*- coding: utf-8 -*-
"""Playfair_ahmadfahrul.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f6x3U56UewjgOEYq6DQETy67ALBZGfxA
"""

def prepare_message(text):
    text = text.upper().replace("J", "I")
    text = ''.join(filter(str.isalpha, text))
    # Padding dengan 'X' jika jumlah karakter ganjil
    if len(text) % 2 != 0:
        text += "X"
    return text

def build_playfair_matrix(key):
    key = key.upper().replace("J", "I")
    key = ''.join(sorted(set(key), key=key.index))
    alphabet = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
    matrix = []

    for char in key:
        if char not in matrix:
            matrix.append(char)

    for char in alphabet:
        if char not in matrix:
            matrix.append(char)

    playfair_matrix = [matrix[i:i+5] for i in range(0, 25, 5)]
    return playfair_matrix

def find_char_position(matrix, char):
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == char:
                return i, j

def playfair_encrypt(plain_text, key):
    plain_text = prepare_message(plain_text)
    playfair_matrix = build_playfair_matrix(key)
    cipher_text = ""

    for i in range(0, len(plain_text), 2):
        char1, char2 = plain_text[i], plain_text[i + 1]
        row1, col1 = find_char_position(playfair_matrix, char1)
        row2, col2 = find_char_position(playfair_matrix, char2)

        if row1 == row2:
            cipher_text += playfair_matrix[row1][(col1 + 1) % 5]
            cipher_text += playfair_matrix[row2][(col2 + 1) % 5]
        elif col1 == col2:
            cipher_text += playfair_matrix[(row1 + 1) % 5][col1]
            cipher_text += playfair_matrix[(row2 + 1) % 5][col2]
        else:
            cipher_text += playfair_matrix[row1][col2]
            cipher_text += playfair_matrix[row2][col1]

    return cipher_text

def main():
    key = input("Masukan Key : ")
    plain_text = input("Masukkan plain text: ")
    cipher_text = playfair_encrypt(plain_text, key)
    print(f"Hasil enkripsi: {cipher_text}")

if __name__ == "__main__":
    main()